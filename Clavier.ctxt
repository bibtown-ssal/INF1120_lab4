#BlueJ class context
comment0.target=Clavier
comment0.text=\n\ separateur\ \:\ (utilise\ par\ isWhitespace)\n\ ----------\n\ \ \ voir\ http\://java.sun.com/j2se/1.4.2/docs/api/java/lang/Character.html\#isWhitespace(char)\n\ \n\ \ \ Un\ caractere\ est\ un\ separateur\ en\ Java\ si\ et\ seulement\ si\ l'un\ des\n\ \ \ criteres\ suivants\ est\ rencontre\ \:\n\n\ \ \ -\ C'est\ un\ caractere\ Unicode\ espace\ (SPACE_SEPARATOR,\ LINE_SEPARATOR,\n\ \ \ \ \ \ ou\ PARAGRAPH_SEPARATOR)\ mais\ n'est\ pas\ aussi\ un\ caractere\ espace\n\ \ \ \ \ \ non-secable\ ('\u00A0',\ '\u2007',\ '\u202F').\ \n\ \ \ -\ C'est\ '\t',\ HORIZONTAL\ TABULATION.\n\ \ \ -\ C'est\ '\n',\ LINE\ FEED.\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ LF\n\ \ \ -\ C'est\ '\u000B',\ VERTICAL\ TABULATION.\n\ \ \ -\ C'est\ '\f',\ FORM\ FEED.\n\ \ \ -\ C'est\ '\n',\ CARRIAGE\ RETURN.\ \ \ \ \ \ \ \ \ \ \ CR\n\ \ \ -\ C'est\ '',\ FILE\ SEPARATOR.\n\ \ \ -\ C'est\ '',\ GROUP\ SEPARATOR.\n\ \ \ -\ C'est\ '',\ RECORD\ SEPARATOR.\n\ \ \ -\ C'est\ '',\ UNIT\ SEPARATOR.\n\ \n\ \ \ voir\ aussi\ http\://www.unicode.org\n\n\ fins\ de\ lignes\n\ --------------\n\n\ \ \ Les\ fins\ de\ lignes\ sont\ codees\ de\ facon\ differente\ selon\ la\ plateforme\n\n\ \ \ \ \ UNIX,\ Linux\ et\ Mac\ OS\ X\t\t\tLF\t\t\t\\n\n\ \ \ \ \ Windows\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ CR\ LF\t\t\\r\ \\n\n\ \ \ \ \ Mac\ OS\ Classique\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ CR\t\t\t\\r\n\n\ \ La\ presente\ classe\ gere\ les\ fins\ de\ lignes\ pour\ UNIX,\ Linux,\ Mac\ OS\ X\ et\ Windows\n
comment1.params=
comment1.target=void\ viderTampon()
comment10.params=
comment10.target=long\ lireLong()
comment11.params=
comment11.target=long\ lireLongLn()
comment12.params=
comment12.target=float\ lireFloat()
comment13.params=
comment13.target=float\ lireFloatLn()
comment14.params=
comment14.target=double\ lireDouble()
comment15.params=
comment15.target=double\ lireDoubleLn()
comment16.params=
comment16.target=char\ lireChar()
comment17.params=
comment17.target=char\ lireCharLn()
comment18.params=
comment18.target=java.lang.String\ lireMot()
comment2.params=
comment2.target=void\ lireFinLigne()
comment3.params=
comment3.target=java.lang.String\ lireString()
comment4.params=
comment4.target=byte\ lireByte()
comment5.params=
comment5.target=byte\ lireByteLn()
comment6.params=
comment6.target=short\ lireShort()
comment7.params=
comment7.target=short\ lireShortLn()
comment8.params=
comment8.target=int\ lireInt()
comment9.params=
comment9.target=int\ lireIntLn()
numComments=19
